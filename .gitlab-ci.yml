stages:
  - test
  - pact-publish
  - dockerize
  - deploy2test
  - deploy2production

test project:
  stage: test
  image: node:16
  script:
    - npm -v
    - npm install npm@8.5.0 -g
    - npm i
    - npm run test-component
    - npm run test-contract

publish pact broker:
  stage: pact-publish
  image:
    name: pactfoundation/pact-cli:latest
    entrypoint: [""]
  variables:
    PACT_BROKER_CHECK_FOR_POTENTIAL_DUPLICATE_PACTICIPANT_NAMES : "false"
  script:
    - pact-broker create-or-update-pacticipant pact/pacts 
        --name "TodoFrontend"
        --consumer-app-version=$CI_COMMIT_SHORT_SHA 
        --tag=$CI_COMMIT_REF_NAME 
        --broker-base-url=$PACT_BROKER_BASE_URL 
        --broker-token=$PACT_BROKER_TOKEN

dockerize project:
  stage: dockerize
  image: docker:20.10.13
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.heroku.com
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

deploy2test:
  stage: deploy2test
  image: docker:20.10.13
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.heroku.com
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG registry.heroku.com/$HEROKU_APP_NAME/web
    - docker push registry.heroku.com/$HEROKU_APP_NAME/web
    - heroku container:release web --app $HEROKU_APP_NAME

deploy project to production:
  stage: deploy2production
  image: docker:20.10.13
  services:
    - docker:dind
  script:
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG